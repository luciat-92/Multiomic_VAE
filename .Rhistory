df_auc_site <- do.call(rbind, df_auc_site)
df_auc_study <- do.call(rbind, df_auc_study)
df_auc_type <- do.call(rbind, df_auc_type)
plot_auc_pertissue <- function(df_auc, title_pl, folder_model, save_csv = TRUE){
# drop NA (not the same site name between tissue and cell lines)
df_auc <- df_auc[!is.na(df_auc$AUC), ]
# order class based on the median AUC in each sample info
df_auc$sample_info <- factor(df_auc$sample_info,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_info, median))))
pl <- ggplot(df_auc, aes(x = sample_info, y = AUC, fill = sample_info)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl)
ggsave(sprintf("%s/boxplotAUC_CLs_pertissue_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl, width = 6, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertissue_%s.csv", folder_model, gsub(" ", "_", title_pl)),
col.names = T, row.names = F)
}
if( "sample_type_macro" %in% colnames(df_auc)){
df_auc$sample_type_macro <- factor(df_auc$sample_type_macro,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_type_macro, median))))
pl2 <- ggplot(df_auc, aes(x = sample_type_macro, y = AUC, fill = sample_type_macro)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl2)
ggsave(sprintf("%s/boxplotAUC_CLs_pertype_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl2, width =4.56, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertype_%s.csv", folder_model, gsub(" ", "_", title_pl)),
col.names = T, row.names = F)
}
}
}
plot_auc_pertissue(df_auc_site, "Same tissue", sprintf("%s/plots/", folder_model))
plot_auc_pertissue(df_auc_study, "Same study", sprintf("%s/plots/", folder_model))
plot_auc_pertissue(df_auc_type, "Same type", sprintf("%s/plots/", folder_model))
plot_auc_pertissue <- function(df_auc, title_pl, folder_model, save_csv = TRUE){
# drop NA (not the same site name between tissue and cell lines)
df_auc <- df_auc[!is.na(df_auc$AUC), ]
# order class based on the median AUC in each sample info
df_auc$sample_info <- factor(df_auc$sample_info,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_info, median))))
pl <- ggplot(df_auc, aes(x = sample_info, y = AUC, fill = sample_info)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl)
ggsave(sprintf("%s/boxplotAUC_CLs_pertissue_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl, width = 6, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertissue_%s.csv", folder_model, gsub(" ", "_", title_pl)),
colnames = T, rownames = F)
}
if( "sample_type_macro" %in% colnames(df_auc)){
df_auc$sample_type_macro <- factor(df_auc$sample_type_macro,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_type_macro, median))))
pl2 <- ggplot(df_auc, aes(x = sample_type_macro, y = AUC, fill = sample_type_macro)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl2)
ggsave(sprintf("%s/boxplotAUC_CLs_pertype_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl2, width =4.56, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertype_%s.csv", folder_model, gsub(" ", "_", title_pl)),
colnames = T, rownames = F)
}
}
}
plot_auc_pertissue(df_auc_site, "Same tissue", sprintf("%s/plots/", folder_model))
plot_auc_pertissue <- function(df_auc, title_pl, folder_model, save_csv = TRUE){
# drop NA (not the same site name between tissue and cell lines)
df_auc <- df_auc[!is.na(df_auc$AUC), ]
# order class based on the median AUC in each sample info
df_auc$sample_info <- factor(df_auc$sample_info,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_info, median))))
pl <- ggplot(df_auc, aes(x = sample_info, y = AUC, fill = sample_info)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl)
ggsave(sprintf("%s/boxplotAUC_CLs_pertissue_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl, width = 6, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertissue_%s.csv", folder_model, gsub(" ", "_", title_pl)),
row.names = F)
}
if( "sample_type_macro" %in% colnames(df_auc)){
df_auc$sample_type_macro <- factor(df_auc$sample_type_macro,
levels = names(sort(tapply(df_auc$AUC, df_auc$sample_type_macro, median))))
pl2 <- ggplot(df_auc, aes(x = sample_type_macro, y = AUC, fill = sample_type_macro)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, size = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
# facet_wrap(.~comp, scales = "free_x") +
labs(x = "", y = "AUCROC") +
ggtitle(title_pl)
print(pl2)
ggsave(sprintf("%s/boxplotAUC_CLs_pertype_%s.pdf", folder_model, gsub(" ", "_", title_pl)),
pl2, width =4.56, height = 4.5)
if(save_csv){
write.csv(df_auc, sprintf("%s/AUC_CLs_pertype_%s.csv", folder_model, gsub(" ", "_", title_pl)),
row.names = F)
}
}
}
plot_auc_pertissue(df_auc_site, "Same tissue", sprintf("%s/plots/", folder_model))
plot_auc_pertissue(df_auc_study, "Same study", sprintf("%s/plots/", folder_model))
plot_auc_pertissue(df_auc_type, "Same type", sprintf("%s/plots/", folder_model))
rm(list = ls())
source("/Volumes/iorio/lucia/Multiomic_VAE/experiments/plot_umap_results.R")
getwd()
# load results
folder_model_1 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False/"
folder_model_2 <- "experiments/experiment_2/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
df_auc_site_1 <- read.csv(sprintf("%s/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
mutate(model = "no_only_shared")
df_auc_site_1 <- read.csv(sprintf("%s/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
mutate(model = "only_shared")
df_auc_site_tot <- rbind(df_auc_site_1, df_auc_site_2)
str(df_auc_site_tot )
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_2)) %>%
mutate(model = "only_shared")
folder_model_2 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
# load results
folder_model_1 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False/"
folder_model_2 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_tissue.csv", folder_model_2)) %>%
mutate(model = "only_shared")
df_auc_site_tot <- rbind(df_auc_site_1, df_auc_site_2)
dim(df_auc_site_tot)
dim(df_auc_site_2)
dim(df_auc_site_1)
str(df_auc_site_tot)
boxplot(df_auc_site_tot$AUC ~ df_auc_site_tot$model)
# load results
folder_model_1 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False/"
folder_model_2 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_2)) %>%
mutate(model = "only_shared")
df_auc_site_tot <- rbind(df_auc_site_1, df_auc_site_2)
boxplot(df_auc_site_tot$AUC ~ df_auc_site_tot$model)
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_type.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_type.csv", folder_model_2)) %>%
mutate(model = "only_shared")
df_auc_site_tot <- rbind(df_auc_site_1, df_auc_site_2)
boxplot(df_auc_site_tot$AUC ~ df_auc_site_tot$model)
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
# load results
folder_model_1 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False/"
folder_model_2 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
folder_model_1
getwd()
# load results
setwd("/Volumes/iorio/lucia/Multiomic_VAE/")
# load results
folder_model_1 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False/"
folder_model_2 <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
df_auc_site_1 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_1)) %>%
dplyr::mutate(model = "no_only_shared")
df_auc_site_2 <- read.csv(sprintf("%s/plots/AUC_CLs_pertissue_Same_study.csv", folder_model_2)) %>%
mutate(model = "only_shared")
df_auc_site_tot <- rbind(df_auc_site_1, df_auc_site_2)
boxplot(df_auc_site_tot$AUC ~ df_auc_site_tot$model)
table(sample_df$sample_type_macro, sample_df$sample_type)
table(sample_df$sample_type_macro, sample_df$study)
pl2 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = sample_type_macro)) +
geom_point(aes(fill = site, color = sample_type_macro), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
str(umap_df)
table(umap_df$`_sample_type`)
# refactor type, first xena then depmap
umap_df <- umap_df %>%
mutate(type = factor(type, levels = c("xena", "depmap"))) %>%
arrange(type) %>%
mutate(study = ifelse(study == "CL_depmap", "Cell Line - DepMap", paste0("Tissue - ", study))) %>%
filter(!is.na(site)) %>%
rename(sample_type = !!("_sample_type"))
pl1 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, color = study, size = type)) +
geom_point(alpha = 0.5) +
scale_size_manual(values = c(0.2, 1)) +
scale_color_manual(values = c("#e8702a", "#6bd2db", "#9ed670", "#0c457d")) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = c(0.99, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 10)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(size = 'none')
pl1
pl1 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, color = sample_type, size = type)) +
geom_point(alpha = 0.5) +
scale_size_manual(values = c(0.2, 1)) +
scale_color_manual(values = c("#e8702a", "#6bd2db", "#9ed670", "#0c457d")) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = c(0.99, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 10)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(size = 'none')
pl1
pl2 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = sample_type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
folder_model <- "experiments/experiment_1/ae_gan/samples__ngene_all_norm_feat_flag_False_only_shared_True/"
umap_df <- read_csv(sprintf("%s/plots/umap.csv", folder_model))
depmap_sample_df <- read_csv("/Volumes/iorio/lucia/datasets/DEPMAP_PORTAL/version_23Q2/Model.csv")
enc_df <- read_csv(sprintf("%s/encoded_features.csv", folder_model))
# refactor type, first xena then depmap
umap_df <- umap_df %>%
mutate(type = factor(type, levels = c("xena", "depmap"))) %>%
arrange(type) %>%
mutate(study = ifelse(study == "CL_depmap", "Cell Line - DepMap", paste0("Tissue - ", study))) %>%
filter(!is.na(site)) %>%
rename(sample_type = !!("_sample_type"))
pl1 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, color = study, size = type)) +
geom_point(alpha = 0.5) +
scale_size_manual(values = c(0.2, 1)) +
scale_color_manual(values = c("#e8702a", "#6bd2db", "#9ed670", "#0c457d")) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = c(0.99, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 10)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(size = 'none')
pl1
# select random colors
n_colors <- length(unique(umap_df$site))
all_c <- colors()
set.seed(12344)
colors <- sample(all_c[!grepl("grey", all_c) & !grepl("gray", all_c)], n_colors)
pl2 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = sample_type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
table(umap_df$study)
pl2 <- ggplot(subset(umap_df, study == "Tissue - TCGA"),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = sample_type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
pl2 <- ggplot(subset(umap_df, study == "Tissue - TCGA"),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = sample_type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
pl2 <- ggplot(subset(umap_df, sample_type == "Normal TIssue"),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2 <- ggplot(subset(umap_df, sample_type == "Normal Tissue"),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
pl2 <- ggplot(subset(umap_df, sample_type == "Normal Tissue"),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = study, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
pl3 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = study, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl3
pl1 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, color = study, size = type)) +
geom_point(alpha = 0.5) +
scale_size_manual(values = c(0.2, 1)) +
scale_color_manual(values = c("#e8702a", "#6bd2db", "#9ed670", "#0c457d")) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = c(0.99, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.text = element_text(size = 10)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(size = 'none')
pl1
pl2 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = sample_type, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
ggsave(sprintf("%s/plots/umap_site_ggplot2.png", folder_model), pl2, width = 8, height = 6.2)
pl2 <- ggplot(subset(umap_df),
aes(x = umap_1, y = umap_2, size = type)) +
geom_point(aes(fill = site, color = type), shape = 21, alpha = 0.8) +
scale_size_manual(values = c(0.7, 1)) +
scale_color_manual(values = c("transparent", "black")) +
# scale_fill_manual(values = colors) +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
# reduce legend spacing
legend.key.height = unit(0.1, "cm"),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
xlab("UMAP 1") +
ylab("UMAP 2") +
guides(fill = guide_legend(ncol = 1), size = 'none', color = 'none')
pl2
